{
	"info": {
		"_postman_id": "77ea5b4f-309e-402e-ac6d-a9f8980b348b",
		"name": "bitsocial",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Register",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"",
							"const rand = pm.variables.replaceIn('{{$randomUUID}}');",
							"const email = rand + \"@test.com\"",
							"pm.environment.set(\"register_user_email\", email);",
							"pm.environment.set(\"register_user_pw\", \"test123\");",
							"pm.collectionVariables.set(\"now\", new Date().getTime() -100000);",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"Check response\", function () {",
							"    pm.expect(jsonData.accessToken).to.be.a('string');",
							"    pm.expect(jsonData.refreshToken).to.be.a('string');",
							"});",
							"",
							"pm.collectionVariables.set(\"user_token\", jsonData.accessToken);",
							"pm.collectionVariables.set(\"user_refresh_token\", jsonData.refreshToken);",
							"",
							"",
							"const parseJwt = (token) => {",
							"    var base64Url = token.split('.')[1];",
							"    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');",
							"    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {",
							"        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);",
							"    }).join(''));",
							"",
							"    return JSON.parse(jsonPayload);",
							"};",
							"",
							"",
							"const jwt = parseJwt(jsonData.accessToken)",
							"",
							"const userId = jwt.sub",
							"console.log('userid:' + userId)",
							"pm.collectionVariables.set(\"userid\", userId);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{register_user_email}}\",\r\n    \"password\": \"{{register_user_pw}}\",\r\n    \"name\": \"test user\",\r\n    \"termsLastAcceptedAt\": {{now}},\r\n    \"sendAnalyticalData\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{auth_url}}/register",
					"host": [
						"{{auth_url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Refresh Login",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"",
							"const rand = pm.variables.replaceIn('{{$randomUUID}}');",
							"const email = rand + \"@test.com\"",
							"pm.environment.set(\"register_user_email\", email);",
							"pm.environment.set(\"register_user_pw\", \"test123\");",
							"pm.collectionVariables.set(\"now\", new Date().getTime() -100000);",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"Check response\", function () {",
							"    pm.expect(jsonData.accessToken).to.be.a('string');",
							"    pm.expect(jsonData.refreshToken).to.be.a('string');",
							"});",
							"",
							"pm.collectionVariables.set(\"user_token\", jsonData.accessToken);",
							"pm.collectionVariables.set(\"user_refresh_token\", jsonData.refreshToken);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"refreshToken\": \"{{user_refresh_token}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{auth_url}}/login/refresh",
					"host": [
						"{{auth_url}}"
					],
					"path": [
						"login",
						"refresh"
					]
				}
			},
			"response": []
		},
		{
			"name": "/profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{api_url}}/profiles",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"profiles"
					]
				}
			},
			"response": []
		},
		{
			"name": "/profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"{{userid}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api_url}}/profiles",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"profiles"
					]
				}
			},
			"response": []
		},
		{
			"name": "/item",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const generateId = () => {\r",
							"    var result = [];\r",
							"    var characters = 'abcdefghijklmnopqrstuvwxyz0123456789';\r",
							"    var charactersLength = characters.length;\r",
							"    for (var i = 0; i < 16; i++) {\r",
							"        result.push(characters.charAt(Math.floor(Math.random() *\r",
							"            charactersLength)));\r",
							"    }\r",
							"    return result.join('');\r",
							"}\r",
							"\r",
							"const storeIds = (amount, prefix) => {\r",
							"    const ids = []\r",
							"    for (i = 1; i <= amount; i++) {\r",
							"        const id = generateId();\r",
							"        console.log(id)\r",
							"        pm.collectionVariables.set(prefix + i, id)\r",
							"        ids.push(id)\r",
							"    }\r",
							"    pm.collectionVariables.set(prefix, JSON.stringify(ids))\r",
							"}\r",
							"\r",
							"\r",
							"storeIds(1, 'item')"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"{{item1}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api_url}}/items",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"items"
					]
				}
			},
			"response": []
		},
		{
			"name": "/item/{id}/like",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{api_url}}/items/{{item1}}/likes",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"items",
						"{{item1}}",
						"likes"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "flowPulledAt",
			"value": ""
		},
		{
			"key": "pulledAt",
			"value": ""
		},
		{
			"key": "now",
			"value": ""
		},
		{
			"key": "user_refresh_token",
			"value": ""
		},
		{
			"key": "user_token",
			"value": ""
		},
		{
			"key": "frequency",
			"value": ""
		},
		{
			"key": "frequency1",
			"value": ""
		},
		{
			"key": "frequency2",
			"value": ""
		},
		{
			"key": "frequency3",
			"value": ""
		},
		{
			"key": "habit",
			"value": ""
		},
		{
			"key": "habit1",
			"value": ""
		},
		{
			"key": "habit2",
			"value": ""
		},
		{
			"key": "habit3",
			"value": ""
		},
		{
			"key": "logEntry",
			"value": ""
		},
		{
			"key": "logEntry1",
			"value": ""
		},
		{
			"key": "logEntry10",
			"value": ""
		},
		{
			"key": "logEntry11",
			"value": ""
		},
		{
			"key": "logEntry12",
			"value": ""
		},
		{
			"key": "logEntry13",
			"value": ""
		},
		{
			"key": "logEntry14",
			"value": ""
		},
		{
			"key": "logEntry15",
			"value": ""
		},
		{
			"key": "logEntry16",
			"value": ""
		},
		{
			"key": "logEntry17",
			"value": ""
		},
		{
			"key": "logEntry18",
			"value": ""
		},
		{
			"key": "logEntry2",
			"value": ""
		},
		{
			"key": "logEntry3",
			"value": ""
		},
		{
			"key": "logEntry4",
			"value": ""
		},
		{
			"key": "logEntry5",
			"value": ""
		},
		{
			"key": "logEntry6",
			"value": ""
		},
		{
			"key": "logEntry7",
			"value": ""
		},
		{
			"key": "logEntry8",
			"value": ""
		},
		{
			"key": "logEntry9",
			"value": ""
		},
		{
			"key": "notification",
			"value": ""
		},
		{
			"key": "notification1",
			"value": ""
		},
		{
			"key": "notification2",
			"value": ""
		},
		{
			"key": "notification3",
			"value": ""
		},
		{
			"key": "notification4",
			"value": ""
		},
		{
			"key": "objective",
			"value": ""
		},
		{
			"key": "objective1",
			"value": ""
		},
		{
			"key": "objective2",
			"value": ""
		},
		{
			"key": "objective3",
			"value": ""
		},
		{
			"key": "target",
			"value": ""
		},
		{
			"key": "target1",
			"value": ""
		},
		{
			"key": "userid",
			"value": ""
		},
		{
			"key": "logEntry19",
			"value": ""
		},
		{
			"key": "newHabitName",
			"value": ""
		},
		{
			"key": "newrepetitions",
			"value": ""
		},
		{
			"key": "journey",
			"value": ""
		},
		{
			"key": "journey1",
			"value": ""
		},
		{
			"key": "item",
			"value": ""
		},
		{
			"key": "item1",
			"value": ""
		}
	]
}